// <auto-generated />
using System;
using DatajudClient.Infrastructure.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatajudClient.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240201142442_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DatajudClient.Domain.Models.Processos.AndamentoProcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProcessoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoId");

                    b.ToTable("AndamentoProcesso");
                });

            modelBuilder.Entity("DatajudClient.Domain.Models.Processos.ComplementoAndamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AndamentoProcessoId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AndamentoProcessoId");

                    b.ToTable("ComplementoAndamento");
                });

            modelBuilder.Entity("DatajudClient.Domain.Models.Processos.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Comarca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeCaso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroProcesso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Vara")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Processo");
                });

            modelBuilder.Entity("DatajudClient.Domain.Models.Processos.AndamentoProcesso", b =>
                {
                    b.HasOne("DatajudClient.Domain.Models.Processos.Processo", "Processo")
                        .WithMany("Andamentos")
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Processo");
                });

            modelBuilder.Entity("DatajudClient.Domain.Models.Processos.ComplementoAndamento", b =>
                {
                    b.HasOne("DatajudClient.Domain.Models.Processos.AndamentoProcesso", "AndamentoProcesso")
                        .WithMany("Complementos")
                        .HasForeignKey("AndamentoProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AndamentoProcesso");
                });

            modelBuilder.Entity("DatajudClient.Domain.Models.Processos.AndamentoProcesso", b =>
                {
                    b.Navigation("Complementos");
                });

            modelBuilder.Entity("DatajudClient.Domain.Models.Processos.Processo", b =>
                {
                    b.Navigation("Andamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
